/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./client/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./client/app.js":
/*!***********************!*\
  !*** ./client/app.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n\n\nwindow.addEventListener('load', function() {\n\t\t// WEB3 CONNECTION\n\tif (typeof web3 !== 'undefined') {\n\t\tconsole.log(\"tst\");\n\t\tweb3 = new Web3(web3.currentProvider);\n\t} else {\n\t\tconsole.log(\"ts2t\");\n\t\t// set the provider you want from Web3.providers\n\n\t}\n\tvar web3 = window.web3;\n\tvar account = web3.eth.accounts[0];\n\tfunction Game(_tournament_instance) {\n\t\tthis.tournament_instance = _tournament_instance\n\t\tthis.settlement_price;\n\t\tthis.position_num;\n\t\tthis.counter;\n\t\tthis.positions = [];\n\t\tthis._difference;\n\t\tthis.differences = [];\n\t\tthis.num_predictions;\n\t\tthis.resolution_period;\n\t\tthis.prediction_period;\n\t\tthis.competition_duration;\n\t\tthis.cost;\n\t\tthis.settled_price;\n\t\tthis.name;\n\t\tthis.tournament_start;\n\t\tthis.resolution;\n\t\tthis.duration;\n\t\tthis.total_eth;\n\t\tthis._wei;\n\t};\n\n\t\n\n\t// WEB3 TESTS\n\tconsole.log(web3.isConnected());\n\tvar version = web3.version.api;\n\tconsole.log(version); \n\n\tvar factory_abi = web3.eth.contract([\n\t\t{\n\t\t\t\"constant\": false,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"_name\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"_asset\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"_prediction_cost\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"time_to_start_minutes\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"duration_minutes\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"createToken\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"tokenAddress\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"anonymous\": false,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"indexed\": false,\n\t\t\t\t\t\"name\": \"newAddress\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"contractCreated\",\n\t\t\t\"type\": \"event\"\n\t\t}\n\t]);\n\tvar factory_address = \"0x7c53b7ede081432fc9519b63879c5df62ffb0a33\";\n\tvar factory_instance = factory_abi.at(factory_address);\n\n\tvar tournament_abi = web3.eth.contract([\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"prediction_number\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"name\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"competition_duration\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": false,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"collect_fees\",\n\t\t\t\"outputs\": [],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": false,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"collect_my_winnings\",\n\t\t\t\"outputs\": [],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": false,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"the_game_broke\",\n\t\t\t\"outputs\": [],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": false,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"myid\",\n\t\t\t\t\t\"type\": \"bytes32\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"result\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"__callback\",\n\t\t\t\"outputs\": [],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": false,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"_myid\",\n\t\t\t\t\t\"type\": \"bytes32\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"_result\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"_proof\",\n\t\t\t\t\t\"type\": \"bytes\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"__callback\",\n\t\t\t\"outputs\": [],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"asset\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": false,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"pos_number\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"claim_winning_prediction\",\n\t\t\t\"outputs\": [],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"price_has_settled\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"bool\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": false,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"_prediction_price\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"predict\",\n\t\t\t\"outputs\": [],\n\t\t\t\"payable\": true,\n\t\t\t\"stateMutability\": \"payable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"fee_collected\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"bool\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"ETHUSD\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"winning_prediction\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"predicted_price\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"winners\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"player_has_withdrew\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"bool\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"resolution_period\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"positions\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"price_prediction_period\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"winning_distance\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"players_total_stake\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": false,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"withdraw_fees\",\n\t\t\t\"outputs\": [],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"cost_to_predict\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"balance\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"total_prediction_stake_pool\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"constant\": true,\n\t\t\t\"inputs\": [],\n\t\t\t\"name\": \"test\",\n\t\t\t\"outputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"view\",\n\t\t\t\"type\": \"function\"\n\t\t},\n\t\t{\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"_name\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"_asset\",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"prediction_cost\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"time_to_start_minutes\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"duration_minutes\",\n\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"_creator\",\n\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"payable\": false,\n\t\t\t\"stateMutability\": \"nonpayable\",\n\t\t\t\"type\": \"constructor\"\n\t\t},\n\t\t{\n\t\t\t\"payable\": true,\n\t\t\t\"stateMutability\": \"payable\",\n\t\t\t\"type\": \"fallback\"\n\t\t}\n\t]);\n\n\n\n\t$(\"#test\").on('click', function() {\n\t\tvar address = factory_instance.createToken(document.getElementsByName(\"Tournament_name\")[0].value, document.getElementById(\"Tournament_asset\").value, document.getElementsByName(\"prediction_cost\")[0].value, document.getElementsByName(\"Tournament_start\")[0].value, document.getElementById(\"tournament_duration\").value, function(err, result) {\n\t\t\tif (!err) {\n\t\t\t\tconsole.log(result);\n\t\t\t}\n\t\t});\n\t});\n\t\n\tfactory_instance.contractCreated({}, {fromBlock: 0, toBlock: 'latest'}).get(function(err, result) {\n\t\tif (!err) {\n\t\t\tconsole.log(result[0].args.newAddress);\n\t\t\tconsole.log(result.length);\n\t\t\tfor (var i=0;i<result.length;i++) {\n\t\t\t\tconsole.log(result[i].args.newAddress);\n\t\t\t\tvar address = result[i].args.newAddress;\n\t\t\t\tvar instance = tournament_abi.at(address);\n\t\t\t\tvar Tournament = new Game(instance);\n\n\t\t\t\tvar name;\n\t\t\t\tvar stakes;\n\t\t\t\tvar duration;\n\t\t\t\tvar asset;\n\n\t\t\t\tconsole.log(`game${i}_`);\n\t\t\t\t\n\t\t\t\t$(\"div.tournaments\").append(`\n\t\t\t\t<ul id=\"my_list\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<button id=\"game${i}_\" class=\"accordion\" onclick=\"accordion('Game${i}')\">MetaMask not detected! </button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t<div id=\"Game${i}\" class=\"w3-container w3-hide\">\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"main_content\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<h2 style=\"text-align: center;border-bottom: solid white;margin-bottom: 50px\"><b id=game${i}_name style=\"color:white\">Daily</b></h2>\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t<div class=\"main_box\">\n\t\t\t\t\t\t\t\t\t\t<h3 style=\"text-align: center\"><b style=\"color:white\">Total Eth Staked</b></h3>\n\t\t\t\t\t\t\t\t\t\t<div class=\"my_box\">\n\t\t\t\t\t\t\t\t\t\t\t<p id=\"game${i}_total_eth_staked\" style=\"font-size: 20px; font-weight: bold\">Pending...</p>\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"main_box\">\n\t\t\t\t\t\t\t\t\t\t<h3 style=\"text-align: center\"><b style=\"color:white\">Status</b></h3>\n\t\t\t\t\t\t\t\t\t\t<div class=\"my_box\">\n\t\t\t\t\t\t\t\t\t\t\t<p id=game${i}_status style=\"font-size: 20px; font-weight: bold\">pending...</p>\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"main_box\">\n\t\t\t\t\t\t\t\t\t\t<h3 style=\"text-align: center\"><b style=\"color:white\">Settlement Price</b></h3>\t\n\t\t\t\t\t\t\t\t\t\t<div class=\"my_box\">\n\t\t\t\t\t\t\t\t\t\t\t<p id=game${i}_settlement_price style=\"font-size: 20px; font-weight: bold\">pending...</p>\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"main_box\">\n\t\t\t\t\t\t\t\t\t\t<h3 style=\"text-align: center\"><b style=\"color:white\">Winners/ Winning Prediction</b></h3>\n\t\t\t\t\t\t\t\t\t\t<div class=\"my_box\">\n\t\t\t\t\t\t\t\t\t\t\t<p id=game${i}_winning_prediction style=\"font-size: 20px; font-weight: bold\">pending...</p>\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"main_box\" style=\"color: white\">\n\t\t\t\t\t\t\t\t\t\t<h3 style=\"text-align: center;\"><b style=\"color:white\">Player Predictions</b></h3>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<div class=\"my_box\">\n\t\t\t\t\t\t\t\t\t\t\t<p id=\"game${i}_player_predictions\" style=\"color: black; font-size: 20px; font-weight: bold\">Player has made no predictions...</p>\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"main_box_alt\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"input_box\">\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"predict\" id=\"game${i}_predict\" value=\"\" style=\"background-color: white; width:80%; margin:auto\" placeholder=\"Predicted Price\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"input_box\">\n\t\t\t\t\t\t\t\t\t\t\t<button id=\"game${i}_predict_it\" class=\"button primary fit\" style=\"width:80%;margin: 0 auto;display:block;position:relative;float:none\">Predict</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"input_box\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<button id=\"game${i}_claim_winning_predictions\" class=\"button primary fit\" style=\"width:80%;margin: 0 auto;display:block;position:relative;float:none\">Claim Winning Prediction</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"input_box\">\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<button id=\"game${i}_collect_winnings\" class=\"button primary fit\" style=\"width:80%;margin: 0 auto;display:block;position:relative;float:none\">Collect Winnings</button>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>`);\n\t\t\t\tpopulate(Tournament, `game${i}_`);\n\n\t\t\t}\n\t\t}\n\t});\n\t\n\n\tfunction populate(game, div) {\n\t\tif (web3.eth.accounts[0] !== account) {\n\t\t\taccount = web3.eth.accounts[0];\n\t\t}\n\t\tvar node = document.getElementById(div + \"player_predictions\");\n\t\t\n\t\t\n\t\tgame.tournament_instance.cost_to_predict.call(function(err, result) {\n\t\t\tif (!err) {\n\t\t\n\t\t\t\tgame._wei = (10 ** result.e); \n\t\t\t\tgame.cost = (10 ** result.e) / (10 ** 18);\n\t\t\t} else {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t});\n\t\tgame.tournament_instance.name.call(function(err, result) {\n\t\t\tif (!err) {\n\t\t\t\tgame.name = result;\n\t\t\t\tvar node = document.getElementById(div + \"name\");\n\t\t\t\t\twhile (node.firstChild) {\n\t\t\t\t\t\tnode.removeChild(node.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tnode.appendChild(document.createTextNode(game.name));\n\t\t\t} else {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t});\n\t\tgame.tournament_instance.asset.call(function(err, result) {\n\t\t\tif (!err) {\n\t\t\t\tgame.asset = result;\n\t\t\t} else {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t});\n\t\tgame.tournament_instance.resolution_period.call(function(err, result) {\n\t\t\tif (!err) {\n\t\t\t\tvar time = result.c;\n\t\t\t\tvar _time = new Date(time*1000);\n\t\t\t\tgame.resolution_period = _time\n\t\t\t} else {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t});\n\t\tgame.tournament_instance.competition_duration.call(function(err, result) {\n\t\t\tif (!err) {\n\t\t\t\tvar time = result.c;\n\t\t\t\n\t\t\t\tvar _time = new Date(time*1000);\n\t\t\t\n\t\t\t\t\n\t\t\t\tgame.competition_duration = _time;\n\t\t\t} else {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t});\n\t\tgame.tournament_instance.price_prediction_period.call(function(err, result) {\n\t\t\tif (!err) {\n\t\t\t\tvar time = result.c;\n\t\t\t\tvar _time = new Date(time*1000);\n\t\t\t\tgame.prediction_period = _time;\n\n\t\t\t} else {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t});\t\n\t\tgame.tournament_instance.prediction_number.call(account, function(err, result) {\n\t\t\tif (!err) {\n\t\t\t\tgame.num_predictions = result.c[0];\n\t\t\t} else {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t});\n\t\t\n\t\tvar tournament_starts = setInterval(function() {\n\n\t\t\t// Get today's date and time\n\t\t\tvar now = new Date().getTime();\n\t\t  \n\t\t\t// Find the distance between now and the count down date\n\t\t\tvar distance = game.prediction_period - now;\n\t\t\t\n\t\t\t// Time calculations for days, hours, minutes and seconds\n\t\t\tvar days = Math.floor(distance / (1000 * 60 * 60 * 24));\n\t\t\tvar hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\t\t\tvar minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n\t\t\tvar seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\t\t  \n\t\t\t// Display the result in the element with id=\"demo\"\n\t\t\tgame.tournament_start = days + \"d \" + hours + \"h \"\n\t\t\t+ minutes + \"m \" + seconds + \"s \";\n\t\t  \n\t\t\t// If the count down is finished, write some text \n\t\t\tif (distance < 0) {\n\t\t\t  clearInterval(tournament_starts);\n\t\t\t  game.tournament_start = \"Tournament has started!\";\n\t\t\t}\n\t\t}, 1000);\n\t\tvar price_settles = setInterval(function() {\n\n\t\t\t// Get today's date and time\n\t\t\tvar now = new Date().getTime();\n\t\t  \n\t\t\t// Find the distance between now and the count down date\n\t\t\tvar distance = game.competition_duration - now;\n\t\t\t\n\t\t\t// Time calculations for days, hours, minutes and seconds\n\t\t\tvar days = Math.floor(distance / (1000 * 60 * 60 * 24));\n\t\t\tvar hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\t\t\tvar minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n\t\t\tvar seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\t\t  \n\t\t\t// Display the result in the element with id=\"demo\"\n\t\t\tgame.duration = days + \"d \" + hours + \"h \"\n\t\t\t+ minutes + \"m \" + seconds + \"s \";\n\t\t  \n\t\t\t// If the count down is finished, write some text \n\t\t\tif (distance < 0) {\n\t\t\t  clearInterval(price_settles);\n\t\t\t  game.duration = \"Price settled:\";\n\t\t\t}\n\t\t}, 1000);\n\t\tvar resolution_period_ends = setInterval(function() {\n\n\t\t\t// Get today's date and time\n\t\t\tvar now = new Date().getTime();\n\t\t  \n\t\t\t// Find the distance between now and the count down date\n\t\t\tvar distance = game.resolution_period - now;\n\t\t\t\n\t\t\t// Time calculations for days, hours, minutes and seconds\n\t\t\tvar days = Math.floor(distance / (1000 * 60 * 60 * 24));\n\t\t\tvar hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\t\t\tvar minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n\t\t\tvar seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\t\t  \n\t\t\t// Display the result in the element with id=\"demo\"\n\t\t\tgame.resolution = days + \"d \" + hours + \"h \"\n\t\t\t+ minutes + \"m \" + seconds + \"s \";\n\t\t  \n\t\t\t// If the count down is finished, write some text \n\t\t\tif (distance < 0) {\n\t\t\t  clearInterval(resolution_period_ends);\n\t\t\t  game.resolution = \"Resolution is over\";\n\t\t\t}\n\t\t}, 1000);\n\t\tvar accountInterval = setInterval(function() {\n\t\t\t\n\t\t\tif (web3.eth.accounts[0] !== account) {\n\t\t\t\taccount = web3.eth.accounts[0];\n\t\t\t}\n\t\t\tgame.tournament_instance.total_prediction_stake_pool.call(function(err, result) {\n\t\t\t\tif (!err) {\n\n\t\t\t\t\t\n\t\t\t\t\tgame.total_eth = (((10 ** result.e) * result.c) / (10 ** 18) ) / 100;\n\t\t\t\t\tvar node = document.getElementById(div + \"total_eth_staked\");\n\t\t\t\t\twhile (node.firstChild) {\n\t\t\t\t\t\tnode.removeChild(node.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tnode.appendChild(document.createTextNode(game.total_eth + \" ETH\"));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\tgame.tournament_instance.ETHUSD.call(function(err, result) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tgame.settlement_price = result;\n\t\t\t\t\tgame.settled_price = parseFloat(game.settlement_price).toFixed(2);\n\t\t\t\t\tvar node = document.getElementById(div + \"settlement_price\");\n\t\t\t\t\twhile (node.firstChild) {\n\t\t\t\t\t\tnode.removeChild(node.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tnode.appendChild(document.createTextNode(game.settled_price + \" ETH/USD\"));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\tgame.tournament_instance.winners.call(function(err, result) {\n\t\t\t\tif(!err) {\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\tgame.tournament_instance.winning_prediction.call(function(err, result) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tvar _result = result.c[0] / 100;\n\t\t\t\t\tvar node = document.getElementById(div + \"winning_prediction\");\n\t\t\t\t\twhile (node.firstChild) {\n\t\t\t\t\t\tnode.removeChild(node.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tnode.appendChild(document.createTextNode(\"Winners\" + result.c[0] + \" ETH/USD\"));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\tgame.tournament_instance.prediction_number.call(account, function(err, result) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tgame.num_predictions = result.c[0];\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar now = new Date().getTime();\n\t\t\tif (now < game.prediction_period) {\n\t\t\t\t// status = prediction period\n\t\t\t\tvar node = document.getElementById(div + \"status\");\n\t\t\t\twhile (node.firstChild) {\n\t\t\t\t\tnode.removeChild(node.firstChild);\n\t\t\t\t}\n\t\t\t\tnode.appendChild(document.createTextNode(\"Prediction Period || Starts: \" + game.prediction_period.toUTCString()));\n\t\t\t\t$(\"#\" + div).html(game.name + \"<br>\" + \"Cost to Predict: \" + game.cost + \" ETH\" + \"<br>\" + game.asset + \" || \" + \"Starts: \" + game.tournament_start + \" || Price settles: \" + game.duration + \" || Prize Pool: \" + game.total_eth + \" ETH\");\n\t\t\t}\n\t\t\tif (now >= game.prediction_period && now < game.competition_duration) {\n\t\t\t\t// status = tournament has started\n\t\t\t\tvar node = document.getElementById(div + \"status\");\n\t\t\t\twhile (node.firstChild) {\n\t\t\t\t\tnode.removeChild(node.firstChild);\n\t\t\t\t}\n\t\t\t\tnode.appendChild(document.createTextNode(\"Tournament has started || Ends: \" + game.competition_duration.toUTCString()));\n\t\t\t\t$(\"#\" + div).html(game.name + \"<br>\" + \"Cost to Predict: \" + game.cost + \" ETH\" + \"<br>\" + game.asset + \" || Tournament has started || Price settles: \" + game.duration + \" || Prize Pool: \" + game.total_eth + \" ETH\");\n\t\t\t}\n\t\t\tif (now >= game.competition_duration && now < game.resolution_period) {\n\t\t\t\t// status = resolution period\n\t\t\t\tvar node = document.getElementById(div + \"status\");\n\t\t\t\twhile (node.firstChild) {\n\t\t\t\t\tnode.removeChild(node.firstChild);\n\t\t\t\t}\n\t\t\t\tnode.appendChild(document.createTextNode(\"Tournament is in resolution || End Time: \" + game.resolution_period.toUTCString()));\n\t\t\t\t$(\"#\" + div).html(game.name + \"<br>\" + \"Cost to Predict: \" + game.cost + \" ETH\" + \"<br>\" + game.asset + \" || Resolution Period || End Time: \" + game.resolution + \" ||  \" + game.settled_price + \" || Prize Pool: \" + game.total_eth + \" ETH\");\n\t\t\t}\n\t\t\tif (now >= game.resolution_period) {\n\t\t\t\t// status = torunament is over!\n\t\t\t\tvar node = document.getElementById(div + \"status\");\n\t\t\t\twhile (node.firstChild) {\n\t\t\t\t\tnode.removeChild(node.firstChild);\n\t\t\t\t}\n\t\t\t\tnode.appendChild(document.createTextNode(\"Tournament has ended\"));\n\t\t\t\t$(\"#\" + div).html(game.name + \"<br>\" + \"Cost to Predict: \" + game.cost + \" ETH\" + \"<br>\" + game.asset + \" || Tournament has ended || \" + game.resolution + \" || \" + game.settled_price + \" || Prize Pool: \" + game.total_eth + \" ETH\");\n\t\t\t}\n\t\t\tif (isFinite(game._difference) == false) {\n\t\t\t\tfor (var i=0;i<game.num_predictions;i++) {\n\t\t\t\t\tgame.tournament_instance.positions.call(account, i, function(err, result) {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\tgame.differences.push(Math.abs(result.c[0] - game.settled_price));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgame._difference = Math.min.apply(Math, game.differences);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}, 200);\n\t\t$(\"#\" + div + \"predict_it\").on('click', function () {\n\t\t\tgame.tournament_instance.predict(document.getElementById(div + \"predict\").value, {value: game._wei, gas: 3000000}, function (err, result) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t}\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t});\n\t\t$('#' + div).on('click', function () {\n\t\t\tvar node = document.getElementById(div + \"player_predictions\");\n\t\t\twhile (node.firstChild) {\n\t\t\t\tnode.removeChild(node.firstChild);\n\t\t\t}\n\t\t\tfor (var i=0;i<=game.num_predictions;i++) {\n\t\t\t\tgame.tournament_instance.positions.call(account, i, function(err, result) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\n\t\t\t\t\t\tconsole.log(result.c[0]);\n\t\t\t\t\t\tnode.appendChild(document.createTextNode(result.c[0] + \" ETH/USD \"));\n\t\t\t\t\t\tnode.appendChild(document.createElement(\"br\"));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t$('#' + div + 'claim_winning_predictions').on('click', function() {\n\t\t\t\n\t\t\t\n\t\t\tconsole.log(game._difference);\n\t\t\tgame.position_num = game.differences.indexOf(game._difference);\n\t\t\tconsole.log(game.position_num)\n\t\t\tgame.tournament_instance.claim_winning_prediction(game.position_num, {gas: 3000000}, function(err, result) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\n\t\t$('#' + div + 'collect_winnings').on('click', function() {\n\t\t\tgame.tournament_instance.collect_my_winnings(function (err, result) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n});\n\n$('select').change(function() {\n\tvar value = $(this).val().toLowerCase();\n\t$('#my_list li').filter(function() {\n\t\t$(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);\n\t});\n});\n$('.search_name').change(function() {\n\tvar value = $(this).val().toLowerCase();\n\t$('#my_list li').filter(function() {\n\t\t$(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);\n\t});\n});\n\n\n\nfunction accordion(id) {\n\tvar x = document.getElementById(id);\n\tif (x.className.indexOf(\"w3-show\") == -1) {\n\t\tx.className += \" w3-show\";\n\t} else { \n\t\tx.className = x.className.replace(\" w3-show\", \"\");\n\t}\n}\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./client/app.js?");

/***/ })

/******/ });